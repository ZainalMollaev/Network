openapi: 3.0.1
info:
  title: Spring Boot 3 + Open API 3
  description: Spring Boot 3 + Open API 3
  contact:
    name: Niket Agrawal
    email: niket.agrawal90@gmail.com
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: V1.0.0
servers:
- url: http://localhost:8080
  description: Localhost Server URL
paths:
  /media/picture:
    get:
      tags:
      - media-controller
      operationId: getPicture
      parameters:
      - name: fileId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - media-controller
      operationId: savePicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaDto'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - media-controller
      operationId: deletePicture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /jwt/refreshToken:
    post:
      tags:
      - jwt-controller
      operationId: getRefreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /jwt/accessToken:
    post:
      tags:
      - jwt-controller
      operationId: getAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /auth/signup:
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /media/picture/{email}:
    get:
      tags:
      - media-controller
      operationId: getPictureId
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    MediaDto:
      type: object
      properties:
        file:
          type: string
          format: binary
        email:
          type: string
        fileId:
          type: string
        fileType:
          type: string
    UserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        refreshToken:
          type: string
    UserProfileDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        refreshToken:
          type: string
        name:
          type: string
        lastname:
          type: string
        birthDate:
          type: string
        gender:
          type: boolean
        title:
          type: string
        company:
          type: string
        specialization:
          type: string
        university:
          type: string
        location:
          type: string
        avatar:
          type: string
        backPhoto:
          type: string
        phoneNumber:
          type: string

spring:
  datasource:
    username: network
    password: network
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/network
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: true
  flyway:
    locations: classpath:/db/migration
    enabled: true
    baseline-on-migrate: true

properties:
  filter:
    attributeName: loginRes
    loginUrl: /auth/login
  minio:
    host: "https://localhost"
    port: 9000
    secure: false
    jpegType: image/jpeg
    accessToken: TQE5viifimaaSC6iSYhA
    secretToken: e9c8lPtMLbYgdYkcOGNcQxN3Y1mIdWQCvkwlDfVi
    backImgLink: backImg/
    avatarLink: avatar/
    userBucket: users
    postBucket: posts
  file:
    compresses:
      - name: posts
        width: 200
        height: 200
      - name: subPosts
        width: 200
        height: 200
      - name: recomendationsPost
        width: 200
        height: 200
      - name: avatar
        width: 200
        height: 200
      - name: miniAvatar
        width: 200
        height: 200
      - name: notificationsAvatar
        width: 200
        height: 200
      - name: commonSubsAvatar
        width: 200
        height: 200
      - name: background
        width: 200
        height: 200
  jwt:
    secretKey: IhiMjRKZAGO0ecKNUXCXull5zmYgsBKsI63uGB2aoSJFukFJaSvIZfI8ACvS
    accessTokenValidity: 2
    refreshTokenValidity: 15
    tokenHeader: Authorization
    tokenPrefix: Bearer

springdoc:
  api-docs:
    path: /api-docs